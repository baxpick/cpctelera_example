name: Reusable Docker Build and Push

on:
  workflow_call:
    inputs:
      dockerfile:
        description: 'Path to the Dockerfile'
        required: true
        type: string
      image_name:
        description: 'Base name for the Docker image (e.g., owner/repo)'
        required: true
        type: string
      image_version:
        description: 'Version tag for the Docker image (e.g., 1.0)'
        required: true
        type: string
      build_context:
        description: 'Build context path'
        required: false
        type: string
        default: './docker'
      build_args:
        description: 'Build arguments'
        required: false
        type: string
        default: 'FOLDER_ROOT=/build'
      platforms:
        description: 'Target platforms for the build'
        required: false
        type: string
        default: 'linux/amd64,linux/arm64'
    secrets:
      DOCKERHUB_USERNAME:
        description: 'Docker Hub Username'
        required: true
      DOCKERHUB_PASSWORD:
        description: 'Docker Hub Password or Token'
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Required for pushing to Docker Hub

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push multi-arch image
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.build_context }}
        file: ${{ inputs.dockerfile }}
        platforms: ${{ inputs.platforms }}
        push: true
        tags: |
          ${{ inputs.image_name }}:${{ inputs.image_version }}
          ${{ inputs.image_name }}:latest
        build-args: ${{ inputs.build_args }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
